[gd_scene load_steps=6 format=2]

[ext_resource path="res://scripts/SceneSwitcher.gd" type="Script" id=1]

[sub_resource type="Animation" id=4]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer:layer")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ -1 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CanvasLayer/ColorRect:material:shader_param/number_of_wave")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=3]
resource_name = "fade"
tracks/0/type = "value"
tracks/0/path = NodePath("CanvasLayer:layer")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 2 ]
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("CanvasLayer/ColorRect:material:shader_param/number_of_wave")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 4, -0.7, -0.446867, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float total_wave = 5;
uniform float number_of_wave = 0; //represent how much wave are shown , 2.5 mean 2 waves and one half shown

vec4 curve(vec2 uv, float pos, vec3 color){
	if(pos > 0.){
		float curve = .15 * sin((6.25 * uv.x) + (1.5 * TIME)) + pos;
  		return vec4(step(uv.y, curve)*color, step(uv.y, curve));
	}
	return vec4(0.);
}

void fragment(){
	vec2 screen_size = (1.0 / SCREEN_PIXEL_SIZE);
	vec2 uv = FRAGCOORD.xy / screen_size;
	vec4 wave;
	
	for (int i = 0; i < int(total_wave); i++){
		float visibility = number_of_wave - float(i);
		visibility = clamp(visibility, 0., 1.);
		//how much of this wave is visible
		float height_difference = (screen_size.y/(total_wave*40.));
		float height = height_difference*float(i)*step(0.1, visibility) + height_difference*visibility;
		height *= .2;
		wave += curve(uv,height , vec3(.0,.0, .2));
		//I could try to make a smooth transition using bezier curve
	}
	//should apply the step function to the alpha too
	COLOR = vec4(wave);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/total_wave = 5.0
shader_param/number_of_wave = 0.0

[node name="SceneSwitcher" type="Node2D"]
z_index = -2
script = ExtResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/RESET = SubResource( 4 )
anims/fade = SubResource( 3 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]
layer = -1

[node name="ColorRect" type="ColorRect" parent="CanvasLayer"]
light_mask = 0
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 1.0
margin_right = 1.0
__meta__ = {
"_edit_use_anchors_": false
}
